#!/bin/bash
set -e

echo "Configurando audio para DAC USB..."

# Cargar configuraciones
if [ -f "config/squeezelite.conf" ]; then
  # shellcheck disable=SC1091
  source "config/squeezelite.conf"
fi
if [ -f "config/lms-permissions.conf" ]; then
  # shellcheck disable=SC1091
  source "config/lms-permissions.conf"
fi

: "${SL_NAME:=SqueezePlayer}"
: "${SL_SOUNDCARD:=hw:1,0}"
: "${SL_EXTRA_ARGS:=-b 500:2000 -C 5 -r 44100-192000}"
: "${HOST_USER:=$(logname 2>/dev/null || echo "$SUDO_USER" || echo "$USER")}"

# Mostrar dispositivos
aplay -l || true

# Escribir /etc/default/squeezelite
sudo tee /etc/default/squeezelite > /dev/null <<EOF
# Squeezelite defaults generated by LyrionMusicSetup
SL_NAME="${SL_NAME}"
SL_SOUNDCARD="${SL_SOUNDCARD}"
SL_EXTRA_ARGS="${SL_EXTRA_ARGS}"
EOF

# Instalar /etc/asound.conf desde repo si existe, sino ~/.asoundrc
if [ -f "etc/asound.conf" ]; then
  sudo cp etc/asound.conf /etc/asound.conf
else
  sudo tee "/home/${HOST_USER}/.asoundrc" > /dev/null <<EOF
pcm.!default {
    type hw
    card ${SL_SOUNDCARD%%,*}
    device ${SL_SOUNDCARD#*,}
}
ctl.!default {
    type hw
    card ${SL_SOUNDCARD%%,*}
}
EOF
  sudo chown "${HOST_USER}:${HOST_USER}" "/home/${HOST_USER}/.asoundrc"
fi

# Añadir usuario LMS al grupo audio
if id "${LMS_USER:-lyrion}" &>/dev/null; then
  sudo usermod -a -G audio "${LMS_USER:-lyrion}" || true
fi

# -----------------------
# Ajuste automático de volumen (para salida baja)
# -----------------------
TARGET_VOL="${TARGET_VOL:-90}"   # porcentaje objetivo (puedes cambiar en config)
CARD="${SL_SOUNDCARD%%,*}"
# Si SL_SOUNDCARD es "default" intenta detectar card USB si existe
if [ "$CARD" = "default" ] || ! [[ "$CARD" =~ ^[0-9]+$ ]]; then
  CARD_DETECTED="$(aplay -l 2>/dev/null | grep -i usb | head -n1 | sed -n 's/^card \([0-9]\+\).*/\1/p' || true)"
  CARD="${CARD_DETECTED:-1}"
fi

echo "Intentando fijar volumen ALSA en card ${CARD} a ${TARGET_VOL}%..."

# Lista de controles a probar
CONTROLS=(Master PCM Digital "Headphone" "Speaker" "Line")

for c in "${CONTROLS[@]}"; do
  if amixer -c "${CARD}" scontrols 2>/dev/null | grep -qi "${c%% *}"; then
    echo "Ajustando control ${c}..."
    amixer -c "${CARD}" sset "$c" "${TARGET_VOL}%" unmute >/dev/null 2>&1 || true
  fi
done

# Intentar fijar PCM a 0.0 dB si existe (mejor nivel sin atenuación)
if amixer -c "${CARD}" scontrols 2>/dev/null | grep -qi 'PCM'; then
  echo "Intentando fijar PCM a 0.0 dB (si está disponible)..."
  amixer -c "${CARD}" sset PCM 0dB unmute >/dev/null 2>&1 || true
fi

# Si existe pactl (PipeWire) ajusta sink por defecto
if command -v pactl >/dev/null 2>&1; then
  SINK="$(pactl list short sinks | head -n1 | awk '{print $1}' || true)"
  if [ -n "$SINK" ]; then
    echo "Ajustando volumen de PipeWire sink ${SINK} a ${TARGET_VOL}%..."
    pactl set-sink-volume "$SINK" "${TARGET_VOL}%" >/dev/null 2>&1 || true
    pactl set-sink-mute "$SINK" 0 >/dev/null 2>&1 || true
  fi
fi

# Persistir estado ALSA para reinicios
if command -v alsactl >/dev/null 2>&1; then
  echo "Persistiendo mezcla ALSA (alsactl store)..."
  sudo alsactl store || true
fi

echo "Configuración de audio y volumen aplicada."